name: 'Free disk space'
description: 'Maximize the available disk space for OpenWrt build job'
branding:
  icon: 'crop'
  color: 'orange'
inputs:
  root-reserve-gb:
    description: 'Space to be left free on the root filesystem, in GB.'
    required: false
    default: '2'
  swap-size-gb:
    description: 'Swap space to create, in GB.'
    required: false
    default: '8'
  build-mount-path:
    description: 'Absolute path to the mount point where the build space will be available, defaults to github.workspace if unset.'
    required: false
runs:
  using: "composite"
  steps:
    - name: Show system
      shell: bash
      run: |
        echo -e "\e[1;32mMemory:\e[0m"
        free -h
        echo -e "\e[1;32mStorage:\e[0m"
        df -Th / /mnt
        echo

    - name: Free disk space
      shell: bash
      run: |
        set -euo pipefail
        BUILD_MOUNT_PATH="${{ inputs.build-mount-path }}"
        if [[ -z "$BUILD_MOUNT_PATH" ]]; then
          BUILD_MOUNT_PATH="${{ github.workspace }}"
        fi
        sudo swapoff -a
        sudo rm -f /swapfile /mnt/swapfile
        sudo docker image prune -a -f
        sudo systemctl stop docker.socket
        sudo systemctl stop docker.service
        sudo snap set system refresh.retain=2
        echo "::group::  Uninstall packages"
        sudo apt-get -y purge firefox clang* gcc-12 gcc-14 ghc* google* llvm* mono* mongo* mysql* php*
        sudo apt-get -y autoremove --purge
        sudo apt-get clean
        sudo rm -rf /etc/mysql /etc/php /usr/lib/{jvm,llvm} /usr/libexec/docker /usr/local /usr/src/* /var/lib/docker /var/lib/gems /var/lib/mysql /var/lib/snapd /etc/skel /opt/{microsoft,az,hostedtoolcache,cni,mssql-tools,pipx} /usr/share/{az*,dotnet,swift,miniconda,gradle*,java,kotlinc,ri,sbt} /root/{.sbt,.local,.npm} /usr/libexec/gcc/x86_64-linux-gnu/14 /usr/lib/x86_64-linux-gnu/{*clang*,*LLVM*} /home/linuxbrew
        sudo sed -i '/NVM_DIR/d;/skel/d' /root/{.bashrc,.profile}
        rm -rf ~/{.cargo,.dotnet,.rustup}
        echo "::endgroup::"
        if [[ "${{ inputs.swap-size-gb }}" != 0 ]]; then
          echo "::group::  Create SWAP"
          sudo dd if=/dev/zero of="/mnt/swapfile" bs=1G count=${{ inputs.swap-size-gb }}
          sudo chmod 600 /mnt/swapfile
          sudo mkswap /mnt/swapfile
          sudo swapon /mnt/swapfile
          echo "::endgroup::"
        fi
        echo "::group::  Create Volume Group"
        mnt_size=$(df -h /mnt | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//')
        root_size=$(expr $(df -h / | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - ${{ inputs.root-reserve-gb }})
        sudo truncate -s "$mnt_size"G /mnt/mnt.img
        sudo truncate -s "$root_size"G /root.img
        sudo losetup /dev/loop6 /mnt/mnt.img
        sudo losetup /dev/loop7 /root.img
        sudo pvcreate /dev/loop6
        sudo pvcreate /dev/loop7
        sudo vgcreate github /dev/loop6 /dev/loop7
        sudo lvcreate -n runner -l 100%FREE github
        sudo mkfs.xfs /dev/mapper/github-runner
        sudo mkdir -p "$BUILD_MOUNT_PATH"
        sudo mount /dev/mapper/github-runner "$BUILD_MOUNT_PATH"
        sudo chown -R runner:runner "$BUILD_MOUNT_PATH"
        echo "::endgroup::"
        sudo sync
        sudo sysctl -w vm.drop_caches=3

    - name: Disk space report after modification
      shell: bash
      run: |
        echo -e "\n\e[1;32mMemory:\e[0m"
        sudo free -h
        echo -e "\e[1;32mAvailable Storage:\e[0m"
        sudo df -Th
